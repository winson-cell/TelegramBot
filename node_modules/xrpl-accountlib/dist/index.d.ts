import * as generate from "./generate";
import * as derive from "./derive";
import * as utils from "./utils";
import { sign, signAndSubmit } from "./sign";
import * as rawSigning from "./rawSigning";
import XRPL_Account from "./schema/Account";
import { XrplClient } from "xrpl-client";
import * as rippleAddressCodec from "ripple-address-codec";
import * as rippleKeypairs from "ripple-keypairs";
import * as rippleSecretCodec from "ripple-secret-codec";
import * as xrplBinaryCodecPrerelease from "xrpl-binary-codec-prerelease";
import { XrplDefinitions, nativeAsset } from "xrpl-binary-codec-prerelease";
import { type DefinitionsData } from "xrpl-binary-codec-prerelease/dist/enums/xrpl-definitions-base";
declare const binary: {
    encode: typeof xrplBinaryCodecPrerelease.encode;
    decode: typeof xrplBinaryCodecPrerelease.decode;
    encodeForSigning: typeof xrplBinaryCodecPrerelease.encodeForSigning;
    encodeForMultisigning: typeof xrplBinaryCodecPrerelease.encodeForMultisigning;
    encodeForSigningClaim: typeof xrplBinaryCodecPrerelease.encodeForSigningClaim;
    DEFAULT_DEFINITIONS: {
        TYPES: {
            Done: number;
            Unknown: number;
            NotPresent: number;
            UInt16: number;
            UInt32: number;
            UInt64: number;
            Hash128: number;
            Hash256: number;
            Amount: number;
            Blob: number;
            AccountID: number;
            STObject: number;
            STArray: number;
            UInt8: number;
            Hash160: number;
            PathSet: number;
            Vector256: number;
            UInt96: number;
            UInt192: number;
            UInt384: number;
            UInt512: number;
            Issue: number;
            XChainBridge: number;
            Transaction: number;
            LedgerEntry: number;
            Validation: number;
            Metadata: number;
        };
        LEDGER_ENTRY_TYPES: {
            Invalid: number;
            AccountRoot: number;
            DirectoryNode: number;
            RippleState: number;
            Ticket: number;
            SignerList: number;
            Offer: number;
            Bridge: number;
            LedgerHashes: number;
            Amendments: number;
            XChainOwnedClaimID: number;
            XChainOwnedCreateAccountClaimID: number;
            FeeSettings: number;
            Escrow: number;
            PayChannel: number;
            Check: number;
            DepositPreauth: number;
            NegativeUNL: number;
            NFTokenPage: number;
            NFTokenOffer: number;
            AMM: number;
            DID: number;
            Any: number;
            Child: number;
            Nickname: number;
            Contract: number;
            GeneratorMap: number;
        };
        FIELDS: (string | {
            nth: number;
            isVLEncoded: boolean;
            isSerialized: boolean;
            isSigningField: boolean;
            type: string;
        })[][];
        TRANSACTION_RESULTS: {
            telLOCAL_ERROR: number;
            telBAD_DOMAIN: number;
            telBAD_PATH_COUNT: number;
            telBAD_PUBLIC_KEY: number;
            telFAILED_PROCESSING: number;
            telINSUF_FEE_P: number;
            telNO_DST_PARTIAL: number;
            telCAN_NOT_QUEUE: number;
            telCAN_NOT_QUEUE_BALANCE: number;
            telCAN_NOT_QUEUE_BLOCKS: number;
            telCAN_NOT_QUEUE_BLOCKED: number;
            telCAN_NOT_QUEUE_FEE: number;
            telCAN_NOT_QUEUE_FULL: number;
            telWRONG_NETWORK: number;
            telREQUIRES_NETWORK_ID: number;
            telNETWORK_ID_MAKES_TX_NON_CANONICAL: number;
            temMALFORMED: number;
            temBAD_AMOUNT: number;
            temBAD_CURRENCY: number;
            temBAD_EXPIRATION: number;
            temBAD_FEE: number;
            temBAD_ISSUER: number;
            temBAD_LIMIT: number;
            temBAD_OFFER: number;
            temBAD_PATH: number;
            temBAD_PATH_LOOP: number;
            temBAD_REGKEY: number;
            temBAD_SEND_XRP_LIMIT: number;
            temBAD_SEND_XRP_MAX: number;
            temBAD_SEND_XRP_NO_DIRECT: number;
            temBAD_SEND_XRP_PARTIAL: number;
            temBAD_SEND_XRP_PATHS: number;
            temBAD_SEQUENCE: number;
            temBAD_SIGNATURE: number;
            temBAD_SRC_ACCOUNT: number;
            temBAD_TRANSFER_RATE: number;
            temDST_IS_SRC: number;
            temDST_NEEDED: number;
            temINVALID: number;
            temINVALID_FLAG: number;
            temREDUNDANT: number;
            temRIPPLE_EMPTY: number;
            temDISABLED: number;
            temBAD_SIGNER: number;
            temBAD_QUORUM: number;
            temBAD_WEIGHT: number;
            temBAD_TICK_SIZE: number;
            temINVALID_ACCOUNT_ID: number;
            temCANNOT_PREAUTH_SELF: number;
            temINVALID_COUNT: number;
            temUNCERTAIN: number;
            temUNKNOWN: number;
            temSEQ_AND_TICKET: number;
            temBAD_NFTOKEN_TRANSFER_FEE: number;
            temBAD_AMM_TOKENS: number;
            temXCHAIN_EQUAL_DOOR_ACCOUNTS: number;
            temXCHAIN_BAD_PROOF: number;
            temXCHAIN_BRIDGE_BAD_ISSUES: number;
            temXCHAIN_BRIDGE_NONDOOR_OWNER: number;
            temXCHAIN_BRIDGE_BAD_MIN_ACCOUNT_CREATE_AMOUNT: number;
            temXCHAIN_BRIDGE_BAD_REWARD_AMOUNT: number;
            temEMPTY_DID: number;
            tefFAILURE: number;
            tefALREADY: number;
            tefBAD_ADD_AUTH: number;
            tefBAD_AUTH: number;
            tefBAD_LEDGER: number;
            tefCREATED: number;
            tefEXCEPTION: number;
            tefINTERNAL: number;
            tefNO_AUTH_REQUIRED: number;
            tefPAST_SEQ: number;
            tefWRONG_PRIOR: number;
            tefMASTER_DISABLED: number;
            tefMAX_LEDGER: number;
            tefBAD_SIGNATURE: number;
            tefBAD_QUORUM: number;
            tefNOT_MULTI_SIGNING: number;
            tefBAD_AUTH_MASTER: number;
            tefINVARIANT_FAILED: number;
            tefTOO_BIG: number;
            tefNO_TICKET: number;
            tefNFTOKEN_IS_NOT_TRANSFERABLE: number;
            terRETRY: number;
            terFUNDS_SPENT: number;
            terINSUF_FEE_B: number;
            terNO_ACCOUNT: number;
            terNO_AUTH: number;
            terNO_LINE: number;
            terOWNERS: number;
            terPRE_SEQ: number;
            terLAST: number;
            terNO_RIPPLE: number;
            terQUEUED: number;
            terPRE_TICKET: number;
            terNO_AMM: number;
            terSUBMITTED: number;
            tesSUCCESS: number;
            tecCLAIM: number;
            tecPATH_PARTIAL: number;
            tecUNFUNDED_ADD: number;
            tecUNFUNDED_OFFER: number;
            tecUNFUNDED_PAYMENT: number;
            tecFAILED_PROCESSING: number;
            tecDIR_FULL: number;
            tecINSUF_RESERVE_LINE: number;
            tecINSUF_RESERVE_OFFER: number;
            tecNO_DST: number;
            tecNO_DST_INSUF_XRP: number;
            tecNO_LINE_INSUF_RESERVE: number;
            tecNO_LINE_REDUNDANT: number;
            tecPATH_DRY: number;
            tecUNFUNDED: number;
            tecNO_ALTERNATIVE_KEY: number;
            tecNO_REGULAR_KEY: number;
            tecOWNERS: number;
            tecNO_ISSUER: number;
            tecNO_AUTH: number;
            tecNO_LINE: number;
            tecINSUFF_FEE: number;
            tecFROZEN: number;
            tecNO_TARGET: number;
            tecNO_PERMISSION: number;
            tecNO_ENTRY: number;
            tecINSUFFICIENT_RESERVE: number;
            tecNEED_MASTER_KEY: number;
            tecDST_TAG_NEEDED: number;
            tecINTERNAL: number;
            tecOVERSIZE: number;
            tecCRYPTOCONDITION_ERROR: number;
            tecINVARIANT_FAILED: number;
            tecEXPIRED: number;
            tecDUPLICATE: number;
            tecKILLED: number;
            tecHAS_OBLIGATIONS: number;
            tecTOO_SOON: number;
            tecHOOK_REJECTED: number;
            tecMAX_SEQUENCE_REACHED: number;
            tecNO_SUITABLE_NFTOKEN_PAGE: number;
            tecNFTOKEN_BUY_SELL_MISMATCH: number;
            tecNFTOKEN_OFFER_TYPE_MISMATCH: number;
            tecCANT_ACCEPT_OWN_NFTOKEN_OFFER: number;
            tecINSUFFICIENT_FUNDS: number;
            tecOBJECT_NOT_FOUND: number;
            tecINSUFFICIENT_PAYMENT: number;
            tecUNFUNDED_AMM: number;
            tecAMM_BALANCE: number;
            tecAMM_FAILED: number;
            tecAMM_INVALID_TOKENS: number;
            tecAMM_EMPTY: number;
            tecAMM_NOT_EMPTY: number;
            tecAMM_ACCOUNT: number;
            tecINCOMPLETE: number;
            tecXCHAIN_BAD_TRANSFER_ISSUE: number;
            tecXCHAIN_NO_CLAIM_ID: number;
            tecXCHAIN_BAD_CLAIM_ID: number;
            tecXCHAIN_CLAIM_NO_QUORUM: number;
            tecXCHAIN_PROOF_UNKNOWN_KEY: number;
            tecXCHAIN_CREATE_ACCOUNT_NONXRP_ISSUE: number;
            tecXCHAIN_WRONG_CHAIN: number;
            tecXCHAIN_REWARD_MISMATCH: number;
            tecXCHAIN_NO_SIGNERS_LIST: number;
            tecXCHAIN_SENDING_ACCOUNT_MISMATCH: number;
            tecXCHAIN_INSUFF_CREATE_AMOUNT: number;
            tecXCHAIN_ACCOUNT_CREATE_PAST: number;
            tecXCHAIN_ACCOUNT_CREATE_TOO_MANY: number;
            tecXCHAIN_PAYMENT_FAILED: number;
            tecXCHAIN_SELF_COMMIT: number;
            tecXCHAIN_BAD_PUBLIC_KEY_ACCOUNT_PAIR: number;
            tecXCHAIN_CREATE_ACCOUNT_DISABLED: number;
            tecEMPTY_DID: number;
        };
        TRANSACTION_TYPES: {
            Invalid: number;
            Payment: number;
            EscrowCreate: number;
            EscrowFinish: number;
            AccountSet: number;
            EscrowCancel: number;
            SetRegularKey: number;
            NickNameSet: number;
            OfferCreate: number;
            OfferCancel: number;
            Contract: number;
            TicketCreate: number;
            TicketCancel: number;
            SignerListSet: number;
            PaymentChannelCreate: number;
            PaymentChannelFund: number;
            PaymentChannelClaim: number;
            CheckCreate: number;
            CheckCash: number;
            CheckCancel: number;
            DepositPreauth: number;
            TrustSet: number;
            AccountDelete: number;
            SetHook: number;
            NFTokenMint: number;
            NFTokenBurn: number;
            NFTokenCreateOffer: number;
            NFTokenCancelOffer: number;
            NFTokenAcceptOffer: number;
            Clawback: number;
            AMMCreate: number;
            AMMDeposit: number;
            AMMWithdraw: number;
            AMMVote: number;
            AMMBid: number;
            AMMDelete: number;
            XChainCreateClaimID: number;
            XChainCommit: number;
            XChainClaim: number;
            XChainAccountCreateCommit: number;
            XChainAddClaimAttestation: number;
            XChainAddAccountCreateAttestation: number;
            XChainModifyBridge: number;
            XChainCreateBridge: number;
            DIDSet: number;
            DIDDelete: number;
            EnableAmendment: number;
            SetFee: number;
            UNLModify: number;
        };
    };
};
declare const libraries: {
    rippleAddressCodec: typeof rippleAddressCodec;
    rippleKeypairs: typeof rippleKeypairs;
    rippleSecretCodec: typeof rippleSecretCodec;
    xrplBinaryCodecPrerelease: typeof xrplBinaryCodecPrerelease;
    rippleBinaryCodec: typeof xrplBinaryCodecPrerelease;
};
export { XRPL_Account, generate, derive, sign, signAndSubmit, utils, rawSigning, XrplDefinitions, binary, XrplClient, nativeAsset, libraries, };
export type { DefinitionsData };
