import { type XrplDefinitions } from "xrpl-binary-codec-prerelease";
declare type PreparedRawTransaction = {
    pubkey: string;
    signingPubKey: string;
    multiSign: boolean;
    transaction: Record<string, unknown>;
    message: string;
    hashToSign: string;
};
declare type SignedRawObject = {
    type: "SignedTx" | "MultiSignedTx" | "SignedPayChanAuth";
    txnSignature: string;
    signatureVerifies: boolean;
    txJson: Record<string, unknown>;
    signedTransaction: string;
    id: string;
};
declare type SignerAndSignature = {
    pubKey: string;
    signature: string;
};
/**
 * Prepare a transaction for a Raw card: get Hash to sign
 */
declare const prepare: (txJson: Record<string, unknown>, pubkey: string, multiSign?: boolean, definitions?: XrplDefinitions | undefined) => PreparedRawTransaction;
declare const complete: (Prepared: PreparedRawTransaction, signature: string, definitions?: XrplDefinitions | undefined) => SignedRawObject;
declare const completeMultiSigned: (txJson: Record<string, unknown>, SignersAndSignatures: SignerAndSignature[], definitions?: XrplDefinitions | undefined) => SignedRawObject;
declare const accountAddress: (pubkey: string) => string;
export { accountAddress, prepare, complete, completeMultiSigned };
